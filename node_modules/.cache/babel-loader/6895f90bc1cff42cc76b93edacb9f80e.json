{"ast":null,"code":"var _jsxFileName = \"/Users/judithmaier/Documents/GitHub/react-weather-app/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./WeatherForecast.css\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n            data: forecast[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n            data: forecast[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n            data: forecast[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n            data: forecast[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n            data: forecast[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/judithmaier/Documents/GitHub/react-weather-app/src/WeatherForecast.js"],"names":["React","useState","WeatherForecastDay","axios","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","apiKey","longitude","coordinates","lon","latitude","lat","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC3C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;AACF,MAAI,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAtC;;AACE,WAASS,cAAT,CAAwBC,QAAxB,EAAkC;AAClCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACD,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAEE,QAAQ,CAAC,CAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAEA,QAAQ,CAAC,CAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAEA,QAAQ,CAAC,CAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eASQ;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACJ,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAEA,QAAQ,CAAC,CAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,gBATR,eAWQ;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACJ,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAEA,QAAQ,CAAC,CAAD;AAAlC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,gBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD,GApBD,MAoBO;AAEP,QAAIM,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGV,KAAK,CAACW,WAAN,CAAkBC,GAAlC;AACA,QAAIC,QAAQ,GAAGb,KAAK,CAACW,WAAN,CAAkBG,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOH,SAAU,UAASD,MAAO,eAA9G;AAEAX,IAAAA,KAAK,CAACkB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBZ,cAAvB;AACA,WAAO,IAAP;AACC;AACF;;GArCuBN,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport \"./WeatherForecast.css\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport axios from \"axios\";\n\nexport default function WeatherForecast(props) {\n    let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n    function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <WeatherForecastDay data={forecast[0]} />\n          </div>\n          <div className=\"col\">\n            <WeatherForecastDay data={forecast[1]} />\n          </div>\n          <div className=\"col\">\n            <WeatherForecastDay data={forecast[2]} />\n          </div><div className=\"col\">\n            <WeatherForecastDay data={forecast[3]} />\n          </div><div className=\"col\">\n            <WeatherForecastDay data={forecast[4]} />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n\n  let apiKey = \"5f472b7acba333cd8a035ea85a0d4d4c\";\n  let longitude = props.coordinates.lon;\n  let latitude = props.coordinates.lat;\n  let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n\n  axios.get(apiUrl).then(handleResponse);\n  return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}