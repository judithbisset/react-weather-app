{"ast":null,"code":"var _jsxFileName = \"/Users/judithmaier/Documents/GitHub/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      wind: response.data.wind.speed,\n      city: response.data.name\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"fe03e22b117c78c4cedff8f906c7cf35\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter a city\",\n              \"aria-label\": \"city\",\n              autoFocus: \"on\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-primary w-100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } else {\n    search();\n    return \"Loading\";\n  }\n}\n\n_s(Weather, \"dsaBKiCPm9xAtefQhlJvmvwFSHU=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/judithmaier/Documents/GitHub/react-weather-app/src/Weather.js"],"names":["React","useState","WeatherInfo","axios","Weather","props","weatherData","setWeatherData","ready","city","setCity","defaultCity","handleResponse","response","temperature","data","main","temp","humidity","date","Date","dt","description","weather","icon","wind","speed","name","handleSubmit","event","preventDefault","search","handleCityChange","target","value","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nexport default function Weather(props) {\n    const [weatherData, setWeatherData] = useState({ ready: false });\n  const [city, setCity] = useState(props.defaultCity);\n\nfunction handleResponse(response) {\n    setWeatherData({\n      ready: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n       icon: response.data.weather[0].icon,\n      wind: response.data.wind.speed,\n      city: response.data.name,\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  function search() {\n    const apiKey = \"fe03e22b117c78c4cedff8f906c7cf35\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n   if (weatherData.ready) {\n    return (\n        <div className=\"Weather\">\n            <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-9\">\n            \n                 <input\n                     type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter a city\"\n                    aria-label=\"city\"\n                    \n                    autoFocus=\"on\"\n                    onChange={handleCityChange}\n                                    />\n                    </div>\n\n                                <div className=\"col-3\">\n                                    <input\n                type=\"submit\"\n                value=\"Search\"\n                className=\"btn btn-primary w-100\"\n              />\n                                    \n                                </div>\n                            </div>\n                        </form>\n                        <WeatherInfo data={weatherData} />\n                        \n                        \n        \n      </div>\n      \n    );\n    } else {\n        search();\n    \n    return \"Loading\";\n        \n  }\n}\n"]},"metadata":{},"sourceType":"module"}